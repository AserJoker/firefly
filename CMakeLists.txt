cmake_minimum_required(VERSION 3.12)
project(firefly)
set(FF_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/packages/include)
set(FF_ROOT_PROJECT_NAME ${PROJECT_NAME})
set(CMAKE_CXX_STANDARD 23)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${PROJECT_SOURCE_DIR}/Debug)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR}/Release)
set(DEBUG_ENABLE on)
set(CMAKE_CXX_FLAGS "-Wall -Werror -Wno-non-template-friend")

if(CMAKE_BUILD_TYPE MATCHES "Debug")
    set(DEBUG_ENABLE on)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG})
elseif(CMAKE_BUILD_TYPE MATCHES "Release")
    set(DEBUG_ENABLE off)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE})
elseif(CMAKE_BUILD_TYPE MATCHES "MinSizeRel")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE})
    set(DEBUG_ENABLE off)
elseif(CMAKE_BUILD_TYPE MATCHES "RelWithDebInfo")
    set(DEBUG_ENABLE on)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG})
endif()

# add_custom_target(copy)
# add_custom_command(TARGET copy PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${PROJECT_SOURCE_DIR}/media ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/media)
# add_custom_command(TARGET copy PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${PROJECT_SOURCE_DIR}/mods ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/mods)
# add_custom_command(TARGET copy PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${PROJECT_SOURCE_DIR}/config ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/config)

# find_package(fmt CONFIG REQUIRED)
# find_package(SDL2 CONFIG REQUIRED)
# find_package(SDL2_image CONFIG REQUIRED)
# find_package(SDL2_mixer CONFIG REQUIRED)
# find_package(glad CONFIG REQUIRED)
# find_package(glm CONFIG REQUIRED)
# find_package(LibXml2 REQUIRED)
# find_package(Freetype REQUIRED)

if(DEBUG_ENABLE MATCHES "on")
    enable_testing()
    find_package(GTest CONFIG REQUIRED)
    add_subdirectory(tests)
endif()

add_subdirectory(packages)
add_subdirectory(projects)